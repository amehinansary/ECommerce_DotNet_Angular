{"version":3,"file":"src_app_checkout_checkout_module_ts.df8dcac6c2fab51d.js","mappings":"+TAEIA,gBAA+D,cAE3DA,iEAASA,mBAAU,GAKnBA,SACFA,0DAJEA,6CADAA,qBAIAA,iCCAD,IAAMC,EAAb,MAAM,MAAOA,UAAyBC,KANtCC,kCAOWC,yBAA8B,CAUxC,CARCC,WACED,KAAKE,OAASF,KAAKG,kBACpB,CAEDC,QAAQC,GACNL,KAAKM,cAAgBD,CACtB,4EATUR,KAAgBU,GAAhBV,EAAgB,6BAAhBA,EAAgBW,6FAFhB,CAAC,CAAEC,QAASX,KAAYY,YAAab,KAAmBD,uSDPrEA,iBAAuB,UAEnBA,sBAUFA,QACAA,eACEA,WACFA,iBAbwCA,kCAYxBA,gfCLLC,CAAb,6BCEO,IAAMc,EAAb,MAAM,MAAOA,EAGXZ,YAAoBa,EAAwCC,GAAxCb,sBAAwCA,aAA0B,CAEtFC,WACC,CAEDa,kBACEd,KAAKY,eAAeG,kBAAkBf,KAAKgB,aAAaC,IAAI,gBAAgBC,OAAOC,UAAU,CAC3FC,KAAOC,IACLrB,KAAKa,OAAOS,QAAQ,iBACpBtB,KAAKgB,aAAaC,IAAI,gBAAgBM,MAAMF,EAA5C,EACCG,MAAQA,IACTxB,KAAKa,OAAOW,MAAMA,EAAMC,SACxBC,QAAQC,IAAIH,EAAZ,EAEFI,SAAU,IAAMF,QAAQG,KAAK,aAEhC,+CAnBUlB,GAAwBf,iDAAxBe,EAAwBH,yzBCXrCZ,iBAA6C,UAA7CA,CAA6C,QAErCA,4BAAgBA,QACpBA,oBACEA,gCAASkC,mBAAiB,GAO1BlC,qCACFA,UAEFA,iBAA6C,WAEzCA,4BAIFA,QACAA,iBACEA,6BAIFA,QACAA,kBACEA,6BAIFA,QACAA,kBACEA,6BACFA,QACAA,kBACEA,6BAIFA,QACAA,kBACEA,8BAIFA,YAIJA,mBAEC,gBAEGA,iBAAiCA,6BACnCA,QACAA,sBAKEA,6BAAeA,iBACjBA,iBA/DgBA,kCAMZA,8GAWEA,qCAMAA,oCAMAA,iCAKcA,+BAIdA,gCAMAA,mCAcJA,8HD/CSe,CAAb,sCEAO,IAAMoB,EAAb,MAAM,MAAOA,EAGXhC,YAAoBiC,eAFpBhC,aAAUiC,UAE+B,CAEzCC,YAAYC,GACV,OAAOnC,KAAKgC,KAAKI,KAAKpC,KAAKqC,QAAU,SAAUF,EAChD,CAEDG,qBACE,OAAOtC,KAAKgC,KAAKf,IAAIjB,KAAKqC,QAAU,0BAA0BE,QAC5DC,KAAKC,GACIA,EAAGC,KAAK,CAACC,EAAQC,IAAWA,EAAEC,MAAQF,EAAEE,QAGpD,+CAfUd,GAAenC,wCAAfmC,EAAee,QAAff,EAAe,qBAFd,SAEDA,CAAb,6CCRInC,iBAAqE,cAIjEA,qEAASA,4BAAwB,GAHnCA,QAQAA,oBAA0D,YAChDA,6BAAsDA,QAC9DA,cACAA,mBAAqCA,SAAwBA,wCAT7DA,0BAEAA,oBAIKA,2BACGA,2DAE6BA,+BCJtC,IAAMmD,EAAb,MAAM,MAAOA,EAIXhD,YAAoBiD,EAA0CC,GAA1CjD,uBAA0CA,oBAAiC,CAE/FC,WACED,KAAKgD,gBAAgBV,qBAAqBnB,UAAU,CAClDC,KAAOqB,GAAOzC,KAAKkD,gBAAkBT,EACrCjB,MAAQ2B,GAAQzB,QAAQC,IAAIwB,GAC5BvB,SAAU,IAAMF,QAAQG,KAAK,aAEhC,CAEDuB,iBAAiBC,GACfrD,KAAKiD,cAAcG,iBAAiBC,EACrC,+CAhBUN,GAAyBnD,8CAAzBmD,EAAyBvC,yrBDXtCZ,iBAA6C,UAC1BA,uCAA2BA,QAC5CA,iBACEA,uBAeFA,UAGFA,iBAEC,cAEGA,eAAiCA,6BACnCA,QACAA,oBAKEA,2BAAaA,gBACfA,iBAjCgBA,kCAGmCA,4CAyBjDA,8ICjBSmD,CAAb,mBCCO,IAAMO,EAAb,MAAM,MAAOA,EAIXvD,YAAoBkD,EAAsCpC,GAAtCb,qBAAsCA,aAA0B,CAEpFC,WACED,KAAKuD,QAAUvD,KAAKiD,cAAcM,OACnC,CAEDC,sBACE,OAAOxD,KAAKiD,cAAcO,sBAAsBrC,UAAU,CACxDC,KAAM,IAAMpB,KAAKyD,WAAWrC,OAC5BI,MAAQA,GAAUE,QAAQC,IAAIH,GAC9BI,SAAU,IAAMF,QAAQG,KAAK,aAEhC,+CAhBUyB,GAAuB1D,iDAAvB0D,EAAuB9C,iYCZpCZ,iBACEA,iDAIFA,QAEAA,iBAEC,cAEGA,eAAiCA,8BACnCA,QACAA,oBAAgCA,gCAASkC,uBAAqB,GAC5DlC,2BAAcA,eAChBA,iBAbEA,8BAAkB,qEDUT0D,CAAb,KEZA,0BACA,IACA,cACApC,SAIA,CAHA,MAAIM,GAEJ,YADAkC,IAEA,CAEA7B,OACA8B,KAEAC,4BAEA,CAEe,cACf,kBACA,WACAC,YACA,iCACA,mBAEA,cACAC,qBACA,CAEA,cACAA,sBACA,CAEAC,SACA,EACA,CACA,gFCxBMnE,SACEA,mBAA0BA,SAAgBA,QAC5CA,8BAD4BA,mDA8B9BA,gBCvBG,IAAMoE,EAAb,MAAM,MAAOA,EAgBXjE,YAAoBkD,EAAsCD,EAChDnC,EAA+BoD,GADrBjE,qBAAsCA,uBAChDA,cAA+BA,cAPzCA,iBAAcA,KAAKkE,SAASC,KAAKnE,MACjCA,cAAU,EACVA,sBAAkB,EAClBA,sBAAkB,EAClBA,mBAAe,CAG6C,CAE5DoE,kBACEpE,KAAKqE,OAASC,OAAO,+GACrB,MAAMC,EAAWvE,KAAKqE,OAAOE,WAE7BvE,KAAKwE,WAAaD,EAASE,OAAO,cAClCzE,KAAKwE,WAAWE,MAAM1E,KAAK2E,kBAAkBC,eAC7C5E,KAAKwE,WAAWK,iBAAiB,SAAU7E,KAAK8E,aAEhD9E,KAAK+E,WAAaR,EAASE,OAAO,cAClCzE,KAAK+E,WAAWL,MAAM1E,KAAKgF,kBAAkBJ,eAC7C5E,KAAK+E,WAAWF,iBAAiB,SAAU7E,KAAK8E,aAEhD9E,KAAKiF,QAAUV,EAASE,OAAO,WAC/BzE,KAAKiF,QAAQP,MAAM1E,KAAKkF,eAAeN,eACvC5E,KAAKiF,QAAQJ,iBAAiB,SAAU7E,KAAK8E,YAC9C,CAEDK,cACEnF,KAAKwE,WAAWY,UAChBpF,KAAK+E,WAAWK,UAChBpF,KAAKiF,QAAQG,SACd,CAEDlB,SAASmB,GAMP,OAJErF,KAAKsF,WADHD,EAAM7D,MACU6D,EAAM7D,MAAMC,QAEZ,KAEZ4D,EAAME,iBACP,aACHvF,KAAKwF,gBAAkBH,EAAMzD,SAC7B,UACG,aACH5B,KAAKyF,gBAAkBJ,EAAMzD,SAC7B,UACG,UACH5B,KAAK0F,aAAeL,EAAMzD,SAG/B,CAEK+D,cAAW,gCACfC,EAAKC,SAAU,EACf,MAAMC,EAASF,EAAK3C,cAAc8C,wBAClC,IACE,MAAMC,QAAqBJ,EAAK1D,YAAY4D,GACtCG,QAAsBL,EAAKM,yBAAyBJ,GACtDG,EAAcE,eAChBP,EAAK3C,cAAcmD,kBAAkBN,EAAOO,IAE5CT,EAAK3B,OAAOqC,SAAS,CAAC,oBADqB,CAAEC,MAAOP,KAGpDJ,EAAK/E,OAAOW,MAAMyE,EAAczE,MAAMC,SAExCmE,EAAKC,SAAU,CAIhB,CAHA,MAAQrE,GACPE,QAAQC,IAAIH,GACZoE,EAAKC,SAAU,CAChB,CAjBc,IAkBhB,CAEaK,yBAAyBJ,GAAW,gCAChD,OAAOU,EAAKnC,OAAOoC,mBAAmBX,EAAOY,aAAc,CACzDC,eAAgB,CACdC,KAAMJ,EAAKhC,WACXqC,gBAAiB,CACfC,KAAMN,EAAKxF,aAAaC,IAAI,gBAAgBA,IAAI,eAAeC,SALrB,IASjD,CAEagB,YAAY4D,GAAe,gCACvC,MAAMiB,EAAgBC,EAAKC,iBAAiBnB,GAC5C,OAAOkB,EAAKhE,gBAAgBd,YAAY6E,GAAeG,WAFhB,IAGxC,CAGOD,iBAAiBnB,GACvB,MAAO,CACLqB,SAAUrB,EAAOO,GACjBe,kBAAmBpH,KAAKgB,aAAaC,IAAI,iBAAiBA,IAAI,mBAAmBC,MACjFmG,cAAerH,KAAKgB,aAAaC,IAAI,gBAAgBC,MAExD,+CAxGU8C,GAAwBpE,sEAAxBoE,EAAwBxD,s7BDlBrCZ,iBAA6C,UAA7CA,CAA6C,WAGvCA,4BAIFA,QACAA,iBACEA,mBACAA,gCAGFA,QACAA,iBACEA,mBACFA,QACAA,kBACEA,qBACFA,YAIJA,mBAEC,gBAEGA,iBAAiCA,6BACnCA,QACAA,sBASEA,gCAASkC,eAAa,GAEtBlC,2BAAaA,iBACbA,uBACFA,iBA1CgBA,kCAIVA,uCAMaA,oCAoBjBA,0IAWIA,0FCvBKoE,CAAb,8BCCMpE,wGAAkDA,2DAAkD,+CAAlDA,CAAkD,oECZxGA,oBAKEA,6BACFA,8BAJEA,uFAKFA,oBACEA,8BACFA,SCVF,MAAM0H,EAAiB,CACrB,CAACC,KAAM,GAAIC,UCKb,MAAM,MAAOC,EAIX1H,YAAoB2H,EAAyB9G,EAAwCqC,GAAjEjD,UAAyBA,sBAAwCA,oBAAiC,CAEtHC,WACED,KAAK2H,qBACL3H,KAAK4H,uBACL5H,KAAK6H,yBACL7H,KAAK8H,cAAgB9H,KAAKiD,cAAc8E,YACzC,CAEDJ,qBACE3H,KAAKgB,aAAehB,KAAK0H,GAAGM,MAAM,CAChCC,YAAajI,KAAK0H,GAAGM,MAAM,CACzBE,UAAW,CAAC,KAAMC,eAClBC,SAAU,CAAC,KAAMD,eACjBE,OAAQ,CAAC,KAAMF,eACfG,KAAM,CAAC,KAAMH,eACb5B,MAAO,CAAC,KAAM4B,eACdI,QAAS,CAAC,KAAMJ,iBAElBK,aAAcxI,KAAK0H,GAAGM,MAAM,CAC1B3E,eAAgB,CAAC,KAAM8E,iBAEzBM,YAAazI,KAAK0H,GAAGM,MAAM,CACzBU,WAAY,CAAC,KAAMP,kBAGxB,CAEDP,uBACE5H,KAAKY,eAAe+H,iBAAiBxH,UAAU,CAC7CC,KAAOC,IACDA,GACFrB,KAAKgB,aAAaC,IAAI,gBAAgB2H,WAAWvH,EAAjD,EAGJG,MAAQA,GAAUE,QAAQC,IAAIH,GAC9BI,SAAU,IAAMF,QAAQG,KAAK,aAEhC,CAEDgG,yBACE,MAAM/B,EAAS9F,KAAKiD,cAAc8C,wBACF,OAA5BD,EAAOsB,kBACTpH,KAAKgB,aAAaC,IAAI,iBAAiBA,IAAI,mBAAmB2H,WAAW9C,EAAOsB,kBAAkByB,WAErG,+CAjDUpB,GAAiB7H,4DAAjB6H,EAAiBjH,0VHZ9BZ,iBAA4B,UAA5BA,CAA4B,UAA5BA,CAA4B,oBAA5BA,CAA4B,gBAKlBA,kCACFA,QACAA,sBACEA,mCACFA,QACAA,sBACEA,kCACFA,QACAA,uBACEA,mCACFA,YAGJA,kBACEA,wDAEFA,mCAlBeA,wCACDA,kCAAmB,qDACLA,8CAEdA,mCAAoB,sDACLA,8CAEfA,iCACaA,+BAEbA,kCACcA,8CAKPA,oGGPZ6H,CAAb,MDJE,CAACF,KAAM,UAAWC,UECpB,MAAM,MAAOsB,EAGX/I,YAAoBkE,iBAClB,MAAM8E,EAAa/I,KAAKiE,OAAO+E,uBACzBzC,EAAQwC,GAAcA,EAAWE,QAAUF,EAAWE,OAAO1C,MAC/DA,IACFvG,KAAKmC,MAAQoE,EAEhB,CAEDtG,WACC,+CAZU6I,GAAwBlJ,sCAAxBkJ,EAAwBtI,8ZHTrCZ,iBAA4B,SACrBA,eAAkEA,QACvEA,cAAIA,8CAAkCA,QACtCA,eACEA,mGAEFA,QACAA,0BAOAA,0BAGFA,eATKA,+BAMMA,6DGLEkJ,CAAb,OFSO,IAAMI,EAAb,MAAM,MAAOA,kDAAqB,0BAArBA,gCAJTC,cAAsB7B,GAEd6B,QAECD,CAAb,KGCaE,EAAb,MAAM,MAAOA,kDAAc,0BAAdA,gCALTC,KACAH,EACAI,OAGSF,CAAb","names":["i0","StepperComponent","CdkStepper","constructor","this","ngOnInit","linear","linearModeSelected","onClick","index","selectedIndex","t","selectors","provide","useExisting","CheckoutAddressComponent","accountService","toastr","saveUserAddress","updateUserAddress","checkoutForm","get","value","subscribe","next","address","success","reset","error","message","console","log","complete","info","ctx","CheckoutService","http","environment","createOrder","order","post","baseUrl","getDeliveryMethods","pipe","map","dm","sort","a","b","price","factory","CheckoutDeliveryComponent","checkoutService","basketService","deliveryMethods","err","setShippingPrice","deliveryMethod","CheckoutReviewComponent","basket$","createPaymentIntent","appStepper","reject","resolve","Promise","args","asyncGeneratorStep","_next","CheckoutPaymentComponent","router","onChange","bind","ngAfterViewInit","stripe","Stripe","elements","cardNumber","create","mount","cardNumberElement","nativeElement","addEventListener","cardHandler","cardExpiry","cardExpiryElement","cardCvc","cardCvcElement","ngOnDestroy","destroy","event","cardErrors","elementType","cardNumberValid","cardExpiryValid","cardCvcValid","submitOrder","_this","loading","basket","getCurrentBasketValue","createdOrder","paymentResult","confirmPaymentWithStripe","paymentIntent","deleteLocalBasket","id","navigate","state","_this2","confirmCardPayment","clientSecret","payment_method","card","billing_details","name","orderToCreate","_this3","getOrderToCreate","toPromise","basketId","deliveryMethodId","shipToAddress","routes","path","component","CheckoutComponent","fb","createCheckoutForm","getAddressFormValues","getDeliveryMethodValue","basketTotals$","basketTotal$","group","addressForm","firstName","Validators","lastName","street","city","zipCode","deliveryForm","paymentForm","nameOnCard","getUserAddress","patchValue","toString","CheckoutSuccessComponent","navigation","getCurrentNavigation","extras","CheckoutRoutingModule","RouterModule","CheckoutModule","CommonModule","SharedModule"],"sourceRoot":"webpack:///","sources":["./src/app/shared/components/stepper/stepper.component.html","./src/app/shared/components/stepper/stepper.component.ts","./src/app/checkout/checkout-address/checkout-address.component.ts","./src/app/checkout/checkout-address/checkout-address.component.html","./src/app/checkout/checkout.service.ts","./src/app/checkout/checkout-delivery/checkout-delivery.component.html","./src/app/checkout/checkout-delivery/checkout-delivery.component.ts","./src/app/checkout/checkout-review/checkout-review.component.ts","./src/app/checkout/checkout-review/checkout-review.component.html","./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","./src/app/checkout/checkout-payment/checkout-payment.component.html","./src/app/checkout/checkout-payment/checkout-payment.component.ts","./src/app/checkout/checkout.component.html","./src/app/checkout/checkout-success/checkout-success.component.html","./src/app/checkout/checkout-routing.module.ts","./src/app/checkout/checkout.component.ts","./src/app/checkout/checkout-success/checkout-success.component.ts","./src/app/checkout/checkout.module.ts"],"sourcesContent":["<div class=\"container\">\n  <ul class=\"nav nav-pills nav-justified bg-light\">\n    <li class=\"nav-item\" *ngFor=\"let step of steps; let i = index\">\n      <button\n        (click)=\"onClick(i)\"\n        [disabled]=\"true\"\n        [class.active]=\"selectedIndex === i\"\n        class=\"nav-link py-3 text-uppercase font-weight-bold btn-block\"\n      >\n        {{ step.label }}\n      </button>\n    </li>\n  </ul>\n  <div>\n    <ng-container [ngTemplateOutlet]=\"selected.content\"></ng-container>\n  </div>\n</div>\n","import { CdkStepper } from '@angular/cdk/stepper';\nimport { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-stepper',\n  templateUrl: './stepper.component.html',\n  styleUrls: ['./stepper.component.scss'],\n  providers: [{ provide: CdkStepper, useExisting: StepperComponent }]\n})\nexport class StepperComponent extends CdkStepper implements OnInit {\n  @Input() linearModeSelected: boolean = false;\n\n  ngOnInit(): void {\n    this.linear = this.linearModeSelected;\n  }\n\n  onClick(index: number) {\n    this.selectedIndex = index;\n  }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { AccountService } from 'src/app/account/account.service';\nimport { IAddress } from 'src/app/shared/models/address';\n\n@Component({\n  selector: 'app-checkout-address',\n  templateUrl: './checkout-address.component.html',\n  styleUrls: ['./checkout-address.component.scss']\n})\nexport class CheckoutAddressComponent implements OnInit {\n  @Input() checkoutForm!: FormGroup;\n\n  constructor(private accountService: AccountService, private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n  }\n\n  saveUserAddress() {\n    this.accountService.updateUserAddress(this.checkoutForm.get('addressForm')?.value).subscribe({\n      next: (address: IAddress) => {\n        this.toastr.success('Address saved');\n        this.checkoutForm.get('addressForm')?.reset(address)\n      }, error: (error) => {\n        this.toastr.error(error.message);\n        console.log(error);\n      },\n      complete: () => console.info('comlete!')\n    })\n  }\n\n}\n","<div class=\"mt-3\" [formGroup]=\"checkoutForm\">\n  <div class=\"d-flex justify-content-between align-items-center\">\n    <h4>Shipping address</h4>\n    <button\n      (click)=\"saveUserAddress()\"\n      class=\"btn btn-outline-success mb-2\"\n      [disabled]=\"\n        !checkoutForm.get('addressForm').valid ||\n        !checkoutForm.get('addressForm').dirty\n      \"\n    >\n      Save as default address\n    </button>\n  </div>\n  <div class=\"row\" formGroupName=\"addressForm\">\n    <div class=\"form-group col-6\">\n      <app-text-input\n        [label]=\"'First name'\"\n        formControlName=\"firstName\"\n      ></app-text-input>\n    </div>\n    <div class=\"form-group col-6\">\n      <app-text-input\n        [label]=\"'Last name'\"\n        formControlName=\"lastName\"\n      ></app-text-input>\n    </div>\n    <div class=\"form-group col-6\">\n      <app-text-input\n        [label]=\"'Street'\"\n        formControlName=\"street\"\n      ></app-text-input>\n    </div>\n    <div class=\"form-group col-6\">\n      <app-text-input [label]=\"'City'\" formControlName=\"city\"></app-text-input>\n    </div>\n    <div class=\"form-group col-6\">\n      <app-text-input\n        [label]=\"'State'\"\n        formControlName=\"state\"\n      ></app-text-input>\n    </div>\n    <div class=\"form-group col-6\">\n      <app-text-input\n        [label]=\"'Zip code'\"\n        formControlName=\"zipCode\"\n      ></app-text-input>\n    </div>\n  </div>\n</div>\n\n<div\n  class=\"float-none d-flex justify-content-between flex-column flex-lg-row mb-5\"\n>\n  <button class=\"btn btn-outline-primary\" routerLink=\"/basket\">\n    <i class=\"fa fa-angle-left\"></i> Back to basket\n  </button>\n  <button\n    [disabled]=\"checkoutForm.get('addressForm').invalid\"\n    class=\"btn btn-primary\"\n    cdkStepperNext\n  >\n    Go to delivery <i class=\"fa fa-angle-right\"></i>\n  </button>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { IDeliveryMethod } from '../shared/models/deliveryMethod';\nimport { IOrderToCreate } from '../shared/models/order';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CheckoutService {\n  baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  createOrder(order: IOrderToCreate) {\n    return this.http.post(this.baseUrl + 'orders', order);\n  }\n\n  getDeliveryMethods(): Observable<IDeliveryMethod[]> {\n    return this.http.get(this.baseUrl + 'orders/deliveryMethods').pipe(\n      map((dm: any) => { // try to solve any issue IDeliveryMethod[] uggggh\n        return dm.sort((a: any, b: any) => b.price - a.price);\n      })\n    )\n  }\n}\n","<div class=\"my-4\" [formGroup]=\"checkoutForm\">\n  <h4 class=\"mb-3\">Choose your delivery method</h4>\n  <div class=\"row\" formGroupName=\"deliveryForm\">\n    <div class=\"col-6 form-group\" *ngFor=\"let method of deliveryMethods\">\n      <input\n        type=\"radio\"\n        id=\"{{ method.id }}\"\n        (click)=\"setShippingPrice(method)\"\n        value=\"{{ method.id }}\"\n        formControlName=\"deliveryMethod\"\n        class=\"custom-control-input\"\n      />\n      <label for=\"{{ method.id }}\" class=\"custom-control-label\">\n        <strong>{{ method.shortName }} - {{ method.price | currency }}</strong>\n        <br />\n        <span class=\"label-description ms-1\">{{ method.description }}</span>\n      </label>\n    </div>\n  </div>\n</div>\n\n<div\n  class=\"float-none d-flex justify-content-between flex-column flex-lg-row mb-5\"\n>\n  <button class=\"btn btn-outline-primary\" cdkStepperPrevious>\n    <i class=\"fa fa-angle-left\"></i> Back to address\n  </button>\n  <button\n    [disabled]=\"checkoutForm.get('deliveryForm').invalid\"\n    class=\"btn btn-primary\"\n    cdkStepperNext\n  >\n    Go to review <i class=\"fa fa-angle-right\"></i>\n  </button>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { BasketService } from 'src/app/basket/basket.service';\nimport { IDeliveryMethod } from 'src/app/shared/models/deliveryMethod';\nimport { CheckoutService } from '../checkout.service';\n\n@Component({\n  selector: 'app-checkout-delivery',\n  templateUrl: './checkout-delivery.component.html',\n  styleUrls: ['./checkout-delivery.component.scss']\n})\nexport class CheckoutDeliveryComponent implements OnInit {\n  @Input() checkoutForm!: FormGroup;\n  deliveryMethods!: IDeliveryMethod[];\n\n  constructor(private checkoutService: CheckoutService, private basketService: BasketService) { }\n\n  ngOnInit(): void {\n    this.checkoutService.getDeliveryMethods().subscribe({\n      next: (dm) => this.deliveryMethods = dm,\n      error: (err) => console.log(err),\n      complete: () => console.info('complete')\n    })\n  }\n\n  setShippingPrice(deliveryMethod: IDeliveryMethod) {\n    this.basketService.setShippingPrice(deliveryMethod);\n  }\n\n}\n","import { CdkStepper } from '@angular/cdk/stepper';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { BasketService } from 'src/app/basket/basket.service';\nimport { IBasket } from 'src/app/shared/models/basket';\n\n@Component({\n  selector: 'app-checkout-review',\n  templateUrl: './checkout-review.component.html',\n  styleUrls: ['./checkout-review.component.scss']\n})\nexport class CheckoutReviewComponent implements OnInit {\n  @Input() appStepper!: CdkStepper;\n  basket$!: Observable<IBasket>;\n\n  constructor(private basketService: BasketService, private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n    this.basket$ = this.basketService.basket$;\n  }\n\n  createPaymentIntent() {\n    return this.basketService.createPaymentIntent().subscribe({\n      next: () => this.appStepper.next(),\n      error: (error) => console.log(error),\n      complete: () => console.info('complete')\n    })\n  }\n\n}\n","<div class=\"mt-4\">\n  <app-basket-summary\n    [isBasket]=\"false\"\n    [items]=\"(basket$ | async).items\"\n  ></app-basket-summary>\n</div>\n\n<div\n  class=\"float-none d-flex justify-content-between flex-column flex-lg-row mb-5\"\n>\n  <button class=\"btn btn-outline-primary\" cdkStepperPrevious>\n    <i class=\"fa fa-angle-left\"></i> Back to Delivery\n  </button>\n  <button class=\"btn btn-primary\" (click)=\"createPaymentIntent()\">\n    Go to Payment <i class=\"fa fa-angle-right\"></i>\n  </button>\n</div>\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","<div class=\"mt-4\" [formGroup]=\"checkoutForm\">\n  <div class=\"row\">\n    <div class=\"form-group col-12\" formGroupName=\"paymentForm\">\n      <app-text-input\n        [label]=\"'Name on card'\"\n        formControlName=\"nameOnCard\"\n      ></app-text-input>\n    </div>\n    <div class=\"form-group col-6\">\n      <div #cardNumber class=\"form-control py-3\"></div>\n      <ng-container *ngIf=\"cardErrors\">\n        <span class=\"text-danger\">{{ cardErrors }}</span>\n      </ng-container>\n    </div>\n    <div class=\"form-group col-3\">\n      <div #cardExpiry class=\"form-control py-3\"></div>\n    </div>\n    <div class=\"form-group col-3\">\n      <div #cardCvc class=\"form-control py-3\"></div>\n    </div>\n  </div>\n</div>\n\n<div\n  class=\"float-none d-flex justify-content-between flex-column flex-lg-row my-3\"\n>\n  <button class=\"btn btn-outline-primary\" cdkStepperPrevious>\n    <i class=\"fa fa-angle-left\"></i> Back to Review\n  </button>\n  <button\n    [disabled]=\"\n      loading ||\n      checkoutForm.get('paymentForm').invalid ||\n      !cardNumberValid ||\n      !cardExpiryValid ||\n      !cardCvcValid\n    \"\n    class=\"btn btn-primary\"\n    (click)=\"submitOrder()\"\n  >\n    Submit order <i class=\"fa fa-angle-right\"></i>\n    <i *ngIf=\"loading\" class=\"fa fa-spinner fa-spin\"></i>\n  </button>\n</div>\n","import { AfterViewInit, Component, ElementRef, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { BasketService } from 'src/app/basket/basket.service';\nimport { IBasket } from 'src/app/shared/models/basket';\nimport { IOrder } from 'src/app/shared/models/order';\nimport { CheckoutService } from '../checkout.service';\n\n// Stripe is a suite of APIs powering online payment processing and commerce solutions\n// for internet businesses of all sizes. Accept payments and scale faster.\ndeclare var Stripe: any;\n\n@Component({\n  selector: 'app-checkout-payment',\n  templateUrl: './checkout-payment.component.html',\n  styleUrls: ['./checkout-payment.component.scss']\n})\nexport class CheckoutPaymentComponent implements AfterViewInit, OnDestroy {\n  @Input() checkoutForm!: FormGroup;// static: true => we no gonna use any structual directive\n  @ViewChild('cardNumber', { static: true }) cardNumberElement!: ElementRef;\n  @ViewChild('cardExpiry', { static: true }) cardExpiryElement!: ElementRef;\n  @ViewChild('cardCvc', { static: true }) cardCvcElement!: ElementRef;\n  stripe: any;// to get access to js functionality\n  cardNumber: any;// the reason for any that we not using type script with Stripe but JS\n  cardExpiry: any;\n  cardCvc: any;\n  cardErrors: any;\n  cardHandler = this.onChange.bind(this);\n  loading = false;\n  cardNumberValid = false;\n  cardExpiryValid = false;\n  cardCvcValid = false;\n\n  constructor(private basketService: BasketService, private checkoutService: CheckoutService,\n    private toastr: ToastrService, private router: Router) { }\n\n  ngAfterViewInit(): void {// gives html a chance to initialize then we mount Stripe elements\n    this.stripe = Stripe('pk_test_51MDLWUJBeCv6crDE1JC5EFHPV7kwzsGkjJnhc66dyeVCBVauXdLgiP1QJE5gWArnUHKhXYWeIYe3QsNV5SsSCJVe00QSGVobXB');\n    const elements = this.stripe.elements();\n\n    this.cardNumber = elements.create('cardNumber');\n    this.cardNumber.mount(this.cardNumberElement.nativeElement);\n    this.cardNumber.addEventListener('change', this.cardHandler);\n\n    this.cardExpiry = elements.create('cardExpiry');\n    this.cardExpiry.mount(this.cardExpiryElement.nativeElement);\n    this.cardExpiry.addEventListener('change', this.cardHandler);\n\n    this.cardCvc = elements.create('cardCvc');\n    this.cardCvc.mount(this.cardCvcElement.nativeElement);\n    this.cardCvc.addEventListener('change', this.cardHandler);\n  }\n\n  ngOnDestroy(): void {\n    this.cardNumber.destroy();\n    this.cardExpiry.destroy();\n    this.cardCvc.destroy();\n  }\n\n  onChange(event: any) {\n    if (event.error) {\n      this.cardErrors = event.error.message;\n    } else {\n      this.cardErrors = null;\n    }\n    switch (event.elementType) {\n      case 'cardNumber':\n        this.cardNumberValid = event.complete;\n        break;\n      case 'cardExpiry':\n        this.cardExpiryValid = event.complete;\n        break;\n      case 'cardCvc':\n        this.cardCvcValid = event.complete;\n        break;\n    }\n  }\n\n  async submitOrder() {\n    this.loading = true;\n    const basket = this.basketService.getCurrentBasketValue();\n    try {\n      const createdOrder = await this.createOrder(basket);\n      const paymentResult = await this.confirmPaymentWithStripe(basket);\n      if (paymentResult.paymentIntent) {\n        this.basketService.deleteLocalBasket(basket.id);\n        const navigationExtras: NavigationExtras = { state: createdOrder };\n        this.router.navigate(['checkout/success'], navigationExtras);\n      } else {\n        this.toastr.error(paymentResult.error.message);\n      }\n      this.loading = false;\n    } catch (error) {\n      console.log(error);\n      this.loading = false;\n    }\n  }\n\n  private async confirmPaymentWithStripe(basket: any) {\n    return this.stripe.confirmCardPayment(basket.clientSecret, {\n      payment_method: {\n        card: this.cardNumber,\n        billing_details: {\n          name: this.checkoutForm.get('paymentForm')?.get('nameOnCard')?.value\n        }\n      }\n    });\n  }\n\n  private async createOrder(basket: IBasket) {\n    const orderToCreate = this.getOrderToCreate(basket);\n    return this.checkoutService.createOrder(orderToCreate).toPromise();\n  }\n\n\n  private getOrderToCreate(basket: IBasket) {\n    return {\n      basketId: basket.id,\n      deliveryMethodId: +this.checkoutForm.get('deliveryForm')?.get('deliveryMethod')?.value,\n      shipToAddress: this.checkoutForm.get('addressForm')?.value\n    };\n  }\n\n}\n","<div class=\"container mt-5\">\n  <div class=\"row\">\n    <div class=\"col-8\">\n      <app-stepper [linearModeSelected]=\"true\" #appStepper>\n        <cdk-step [label]=\"'Address'\" [completed]=\"(checkoutForm.get('addressForm')).valid\">\n          <app-checkout-address [checkoutForm]=\"checkoutForm\"></app-checkout-address>\n        </cdk-step>\n        <cdk-step [label]=\"'Delivery'\" [completed]=\"(checkoutForm.get('deliveryForm')).valid\">\n          <app-checkout-delivery [checkoutForm]=\"checkoutForm\"></app-checkout-delivery>\n        </cdk-step>\n        <cdk-step [label]=\"'Review'\">\n          <app-checkout-review [appStepper]=\"appStepper\"></app-checkout-review>\n        </cdk-step>\n        <cdk-step [label]=\"'Payment'\">\n          <app-checkout-payment [checkoutForm]=\"checkoutForm\"></app-checkout-payment>\n        </cdk-step>\n      </app-stepper>\n    </div>\n    <div class=\"col-4\">\n      <app-order-totals *ngIf=\"(basketTotals$ | async)\" [shippingPrice]=\"(basketTotals$ | async).shipping\"\n        [subtotal]=\"(basketTotals$ | async).subtotal\" [total]=\"(basketTotals$ | async).total\"></app-order-totals>\n    </div>\n  </div>\n</div>\n","<div class=\"container mt-5\">\n  <div><i class=\"fa fa-check-circle fa-3x mb-4\" style=\"color: green\"></i></div>\n  <h2>Thank you. Your order is confirmed</h2>\n  <p class=\"mb-4\">\n    Your order has not shipped yet, but this is to be expected as we are not a\n    real store\n  </p>\n  <button\n    *ngIf=\"order\"\n    routerLink=\"/orders/{{ order?.id }}\"\n    class=\"btn btn-outline-success\"\n  >\n    View your order\n  </button>\n  <button *ngIf=\"!order\" routerLink=\"/orders\" class=\"btn btn-outline-success\">\n    View your orders\n  </button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CheckoutComponent } from './checkout.component';\nimport { CheckoutSuccessComponent } from './checkout-success/checkout-success.component';\n\nconst routes: Routes = [\n  {path: '', component: CheckoutComponent},\n  {path: 'success', component: CheckoutSuccessComponent}\n]\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class CheckoutRoutingModule { }","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { AccountService } from '../account/account.service';\nimport { BasketService } from '../basket/basket.service';\nimport { IBasketTotals } from '../shared/models/basket';\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.scss']\n})\nexport class CheckoutComponent implements OnInit {\n  checkoutForm!: FormGroup;\n  basketTotals$!: Observable<IBasketTotals>;\n\n  constructor(private fb: FormBuilder, private accountService: AccountService, private basketService: BasketService) { }\n\n  ngOnInit(): void {\n    this.createCheckoutForm();\n    this.getAddressFormValues();\n    this.getDeliveryMethodValue();\n    this.basketTotals$ = this.basketService.basketTotal$;\n  }\n\n  createCheckoutForm() {\n    this.checkoutForm = this.fb.group({\n      addressForm: this.fb.group({\n        firstName: [null, Validators.required],\n        lastName: [null, Validators.required],\n        street: [null, Validators.required],\n        city: [null, Validators.required],\n        state: [null, Validators.required],\n        zipCode: [null, Validators.required],\n      }),\n      deliveryForm: this.fb.group({\n        deliveryMethod: [null, Validators.required]\n      }),\n      paymentForm: this.fb.group({\n        nameOnCard: [null, Validators.required]\n      })\n    })\n  }\n\n  getAddressFormValues() {\n    this.accountService.getUserAddress().subscribe({\n      next: (address) => {\n        if (address) {\n          this.checkoutForm.get('addressForm')?.patchValue(address);\n        }\n      },\n      error: (error) => console.log(error),\n      complete: () => console.info('complete')\n    })\n  }\n\n  getDeliveryMethodValue() {\n    const basket = this.basketService.getCurrentBasketValue();\n    if (basket.deliveryMethodId !== null) {\n      this.checkoutForm.get('deliveryForm')?.get('deliveryMethod')?.patchValue(basket.deliveryMethodId?.toString());\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { IOrder } from 'src/app/shared/models/order';\n\n@Component({\n  selector: 'app-checkout-success',\n  templateUrl: './checkout-success.component.html',\n  styleUrls: ['./checkout-success.component.scss']\n})\nexport class CheckoutSuccessComponent implements OnInit {\n  order!: IOrder;\n\n  constructor(private router: Router) {\n    const navigation = this.router.getCurrentNavigation();\n    const state = navigation && navigation.extras && navigation.extras.state;\n    if (state) {\n      this.order = state as IOrder;\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { SharedModule } from './../shared/shared.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CheckoutComponent } from './checkout.component';\nimport { CheckoutRoutingModule } from './checkout-routing.module';\nimport { CheckoutAddressComponent } from './checkout-address/checkout-address.component';\nimport { CheckoutDeliveryComponent } from './checkout-delivery/checkout-delivery.component';\nimport { CheckoutReviewComponent } from './checkout-review/checkout-review.component';\nimport { CheckoutSuccessComponent } from './checkout-success/checkout-success.component';\nimport { CheckoutPaymentComponent } from './checkout-payment/checkout-payment.component';\n\n@NgModule({\n  declarations: [CheckoutComponent, CheckoutAddressComponent, CheckoutDeliveryComponent, CheckoutReviewComponent, CheckoutSuccessComponent, CheckoutPaymentComponent],\n  imports: [\n    CommonModule,\n    CheckoutRoutingModule,\n    SharedModule\n  ]\n})\nexport class CheckoutModule { }\n"],"x_google_ignoreList":[9]}