{"version":3,"file":"src_app_account_account_module_ts.d188fe4453f73214.js","mappings":"sPAUO,IAAMA,EAAb,MAAM,MAAOA,EAIXC,YAAoBC,EAAwCC,EAAwBC,GAAhEC,sBAAwCA,cAAwBA,sBAFpFA,eAAoB,EAEmG,CAEvHC,WACED,KAAKE,UAAYF,KAAKD,eAAeI,SAASC,YAAYF,WAAgB,QAC1EF,KAAKK,iBACN,CAEDA,kBACEL,KAAKM,UAAY,IAAIC,KAAU,CAC7BC,MAAO,IAAIC,KAAY,GAAI,CAACC,cAAqBA,aACtC,2CACXC,SAAU,IAAIF,KAAY,GAAIC,gBAEjC,CAEDE,WACEZ,KAAKH,eAAegB,MAAMb,KAAKM,UAAUQ,OAAOC,UAAU,CACxDC,KAAOC,GAAMjB,KAAKF,OAAOoB,cAAclB,KAAKE,WAC5CiB,MAAQC,GAAMC,QAAQC,IAAIF,GAC1BG,SAAU,IAAMF,QAAQG,KAAK,aAEhC,+CAzBU7B,GAAc8B,6DAAd9B,EAAc+B,6dCV3BD,iBAA4D,UAA5DA,CAA4D,YAE1BA,mCAAYE,YAAU,GAClDF,iBAAkB,UACuBA,iBAAKA,UAG9CA,4BAAmF,sBAGnFA,iBAA2B,WAEvBA,oBAA4CA,0BAC9CA,UAGFA,qBAA0FA,oBAAOA,QAEjGA,iBAAgCA,kCAAkBA,qBAhB9CA,wCAKoCA,wCACGA,mCAAoB,mBAQvDA,8FDND9B,CAAb,wEEEQ8B,cACEA,SACFA,kCADEA,oDAFJA,iBACEA,uBAGFA,8BAHwBA,oCCN9B,MAAMG,EAAiB,CACrB,CAAEC,KAAM,QAASC,UAAWnC,GAC5B,CAAEkC,KAAM,WAAYC,UCItB,MAAM,MAAOC,EAIXnC,YAAoBoC,EAAyBnC,EAAwCC,GAAjEE,UAAyBA,sBAAwCA,cAFrFA,YAAmB,EAEqF,CAExGC,WACED,KAAKiC,oBACN,CAEDA,qBACEjC,KAAKkC,aAAelC,KAAKgC,GAAGG,MAAM,CAChCC,YAAa,CAAC,KAAM,CAAC1B,gBACrBF,MAAO,CAAC,KAAM,CAACE,cAAqBA,aACzB,0CACT,CAACV,KAAKqC,0BAER1B,SAAU,CAAC,KAAMD,gBAEpB,CAEDE,WACEZ,KAAKH,eAAeyC,SAAStC,KAAKkC,aAAapB,OAAOC,UAAU,CAC9DC,KAAM,IAAMhB,KAAKF,OAAOoB,cAAc,SACtCC,MAAOA,IACLE,QAAQC,IAAIH,GACZnB,KAAKuC,OAASpB,EAAMoB,QAEtBhB,SAAU,IAAMF,QAAQG,KAAK,aAEhC,CAEDa,wBACE,OAAOG,MACEC,KAAM,KAAKC,QAChBC,KAAU,IACHH,EAAQ1B,MAGNd,KAAKH,eAAe+C,iBAAiBJ,EAAQ1B,OAAO4B,QACzDG,KAAIC,GACKA,EAAM,CAAEC,aAAa,GAAS,QAFlC,EAFEC,MAAG,OAUnB,+CA/CUjB,GAAiBN,6DAAjBM,EAAiBL,8gBFZ9BD,iBAAgD,UAAhDA,CAAgD,YAEXA,mCAAYE,YAAU,GACrDF,iBAA8B,UACWA,oBAAQA,UAGjDA,4BAAwF,qBAAxFA,CAAwF,sBAIxFA,sBAMAA,qBAAgEA,qBAAQA,qBAfpEA,2CAK0CA,uCACNA,wCACGA,mCAAoB,mBAExBA,yFEChCM,CAAb,ODMO,IAAMkB,EAAb,MAAM,MAAOA,kDAAoB,0BAApBA,gCAJTC,cAAsBtB,GAEdsB,QAECD,CAAb,mBEHO,IAAME,EAAb,MAAM,MAAOA,kDAAa,0BAAbA,gCALTC,KACAH,EACAI,OAGSF,CAAb","names":["LoginComponent","constructor","accountService","router","activatedRoute","this","ngOnInit","returnUrl","snapshot","queryParams","createLoginForm","loginForm","FormGroup","email","FormControl","Validators","password","onSubmit","login","value","subscribe","next","n","navigateByUrl","error","e","console","log","complete","info","i0","selectors","ctx","routes","path","component","RegisterComponent","fb","createRegisterForm","registerForm","group","displayName","validateEmailNotTaken","register","errors","control","timer","pipe","switchMap","checkEmailExists","map","res","emailExists","of","AccountRoutingModule","RouterModule","AccountModule","CommonModule","SharedModule"],"sourceRoot":"webpack:///","sources":["./src/app/account/login/login.component.ts","./src/app/account/login/login.component.html","./src/app/account/register/register.component.html","./src/app/account/account-routing.module.ts","./src/app/account/register/register.component.ts","./src/app/account/account.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AccountService } from '../account.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm!: FormGroup;\n  returnUrl: string = '';\n\n  constructor(private accountService: AccountService, private router: Router, private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.returnUrl = this.activatedRoute.snapshot.queryParams['returnUrl'] || '/shop';\n    this.createLoginForm();\n  }\n\n  createLoginForm() {\n    this.loginForm = new FormGroup({// first parm of form control => initial form state\n      email: new FormControl('', [Validators.required, Validators\n        .pattern('^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$')]),\n      password: new FormControl('', Validators.required),\n    })\n  }\n\n  onSubmit() {\n    this.accountService.login(this.loginForm.value).subscribe({\n      next: (n) => this.router.navigateByUrl(this.returnUrl),\n      error: (e) => console.log(e),\n      complete: () => console.info('complete')\n    });\n  }\n\n}\n","<div class=\"d-flex justify-content-center mt-5 text-center\">\n  <div class=\"col-3\">\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"mb-4\">\n        <h1 class=\"h3 mb-3 font-weight-normal\">Login</h1>\n      </div>\n\n      <app-text-input formControlName=\"email\" [label]=\"'Email address'\"></app-text-input>\n      <app-text-input formControlName=\"password\" [label]=\"'Password'\" [type]=\"'password'\"></app-text-input>\n\n      <div class=\"checkbox mb-3\">\n        <label>\n          <input type=\"checkbox\" value=\"remember-me\"> Remember me\n        </label>\n      </div>\n\n      <button [disabled]=\"loginForm.invalid\" class=\"btn btn-lg btn-primary w-100\" type=\"submit\">Sign in</button>\n\n      <p class=\"mt-5 mb-3 text-muted\">Â© GizaSystems_2023</p>\n    </form>\n  </div>\n</div>\n","<div class=\"d-flex justify-content-center mt-5\">\n  <div class=\"col-3\">\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"text-center mb-4\">\n        <h1 class=\"h3 mb-3 font-weight-normal\">Register</h1>\n      </div>\n\n      <app-text-input formControlName=\"displayName\" [label]=\"'Display Name'\"></app-text-input>\n      <app-text-input formControlName=\"email\" [label]=\"'Email address'\"></app-text-input>\n      <app-text-input formControlName=\"password\" [label]=\"'Password'\" [type]=\"'password'\"></app-text-input>\n\n      <ul class=\"text-danger list-unstyled\" *ngIf=\"errors\">\n        <li *ngFor=\"let error of errors\">\n          {{error}}\n        </li>\n      </ul>\n\n      <button class=\"btn btn-lg btn-primary w-100 mb-4\" type=\"submit\">Register</button>\n    </form>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent }\n]\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AccountRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AsyncValidatorFn, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { of, timer } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { AccountService } from '../account.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm!: FormGroup;\n  errors: string[] = [];\n\n  constructor(private fb: FormBuilder, private accountService: AccountService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.createRegisterForm();\n  }\n\n  createRegisterForm() {\n    this.registerForm = this.fb.group({//equivelant to new group()\n      displayName: [null, [Validators.required]],\n      email: [null, [Validators.required, Validators\n        .pattern('^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$')],// es7a w foo2 ya negm\n        [this.validateEmailNotTaken()]// this gets called if only sync validation has passed\n      ],\n      password: [null, Validators.required]\n    });\n  }\n\n  onSubmit() {\n    this.accountService.register(this.registerForm.value).subscribe({\n      next: () => this.router.navigateByUrl('/shop'),\n      error: error => {\n        console.log(error);\n        this.errors = error.errors;\n      },\n      complete: () => console.info('complete')\n    })\n  }\n\n  validateEmailNotTaken(): AsyncValidatorFn {\n    return control => {\n      return timer(500).pipe(\n        switchMap(() => {\n          if (!control.value) {\n            return of(null);\n          }\n          return this.accountService.checkEmailExists(control.value).pipe(//email address\n            map(res => {\n              return res ? { emailExists: true } : null;\n            })\n          );\n        })\n      )\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AccountRoutingModule } from './account-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [LoginComponent, RegisterComponent],\n  imports: [\n    CommonModule,\n    AccountRoutingModule,\n    SharedModule\n  ]\n})\nexport class AccountModule { }\n"],"x_google_ignoreList":[]}