{"version":3,"file":"main.b9ec4c0122bad429.js","mappings":"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","names":["AccountService","constructor","http","router","this","environment","ReplaySubject","currentUserSource","asObservable","loadCurrentUser","token","next","of","headers","HttpHeaders","set","get","baseUrl","pipe","map","user","localStorage","setItem","login","values","post","register","logout","removeItem","navigateByUrl","checkEmailExists","email","getUserAddress","updateUserAddress","address","put","i0","factory","Basket","uuidv4","BasketService","BehaviorSubject","basketSource","basketTotalSource","createPaymentIntent","getCurrentBasketValue","id","basket","console","log","setShippingPrice","deliveryMethod","shipping","price","deliveryMethodId","shippingPrice","calculateTotals","setBasket","getBasket","subscribe","response","error","value","addItemToBasket","item","quantity","itemToAdd","mapProductItemToBasketItem","createBasket","items","addOrUpdateItem","info","incrementItemQuantity","foundItemIndex","findIndex","x","decrementItemQuantity","removeItemFromBasket","some","filter","i","length","deleteBasket","deleteLocalBasket","delete","n","e","complete","subtotal","reduce","a","b","total","index","push","productName","name","pictureUrl","brand","productBrand","type","productType","SharedModule","CommonModule","NgbPaginationModule","NgbCarouselModule","NgbDropdownModule","ReactiveFormsModule","FormsModule","CdkStepperModule","RouterModule","NgbModule","apiUrl","production","AuthGuard","accountService","canActivate","route","state","currentUser$","auth","navigate","queryParams","returnUrl","url","NotFoundComponent","ngOnInit","selectors","ServerErrorComponent","navigation","getCurrentNavigation","extras","TestErrorComponent","get404Error","get500Error","get400Error","get400ValidationError","validationErrors","errors","ctx","routes","path","component","HomeComponent","togglePaused","paused","carousel","cycle","pause","onSlide","slideEvent","unpauseOnArrow","source","NgbSlideEventSource","pauseOnIndicator","data","breadcrumb","loadChildren","__webpack_require__","then","mod","ShopModule","Promise","BasketModule","CheckoutModule","OrdersModule","AccountModule","skip","redirectTo","pathMatch","AppRoutingModule","$event","NavBarComponent","basketService","basket$","SectionHeaderComponent","bcService","breadcrumb$","breadcrumbs$","AppComponent","loadBasket","getItem","v","basketId","CoreModule","BreadcrumbModule","ToastrModule","positionClass","preventDuplicates","HomeModule","ErrorInterceptor","toastr","intercept","req","handle","catchError","status","message","statusCode","ok","throwError","BusyService","spinnerService","busy","busyRequestCount","show","undefined","bdColor","color","idle","hide","LoadingInterceptor","busyService","request","method","includes","finalize","JwtInterceptor","clone","setHeaders","Authorization","AppModule","bootstrap","provide","HTTP_INTERCEPTORS","useClass","multi","imports","BrowserModule","BrowserAnimationsModule","HttpClientModule","NgxSpinnerModule","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","sources":["./src/app/account/account.service.ts","./src/app/shared/models/basket.ts","./src/app/basket/basket.service.ts","./src/app/shared/shared.module.ts","./src/environments/environment.prod.ts","./src/app/core/guards/auth.guard.ts","./src/app/core/not-found/not-found.component.ts","./src/app/core/not-found/not-found.component.html","./src/app/core/server-error/server-error.component.html","./src/app/core/server-error/server-error.component.ts","./src/app/core/test-error/test-error.component.html","./src/app/core/test-error/test-error.component.ts","./src/app/home/home.component.html","./src/app/app-routing.module.ts","./src/app/home/home.component.ts","./src/app/core/nav-bar/nav-bar.component.html","./src/app/core/nav-bar/nav-bar.component.ts","./src/app/core/section-header/section-header.component.html","./src/app/core/section-header/section-header.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/core/core.module.ts","./src/app/home/home.module.ts","./src/app/core/interceptors/error.interceptor.ts","./src/app/core/services/busy.service.ts","./src/app/core/interceptors/loading.interceptor.ts","./src/app/core/interceptors/jwt.interceptor.ts","./src/app/app.module.ts","./src/main.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, of, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { IAddress } from '../shared/models/address';\nimport { IUser } from '../shared/models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n  baseUrl = environment.apiUrl;\n  private currentUserSource = new ReplaySubject<IUser>(1);\n  // private currentUserSourceBeh = new BehaviorSubject<IUser>(null!);\n  currentUser$ = this.currentUserSource.asObservable();\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  loadCurrentUser(token: string) {\n    if (token == null) {\n      this.currentUserSource.next(null!);\n      return of(null);\n    }\n\n    let headers = new HttpHeaders();\n    headers = headers.set('Authorization', `Bearer ${token}`);\n\n    return this.http.get(this.baseUrl + 'account', { headers }).pipe(\n      map((user: any) => { // user: IUser\n        if (user) {\n          localStorage.setItem('token', user.token);\n          this.currentUserSource.next(user);\n        }\n      })\n    )\n  }\n\n  login(values: any) {\n    return this.http.post(this.baseUrl + 'account/login', values).pipe(\n      map((user: any) => {// user: IUser\n        if (user) {\n          localStorage.setItem('token', user.token);\n          this.currentUserSource.next(user);\n        }\n      })\n    )\n  }\n\n  register(values: any) {\n    return this.http.post(this.baseUrl + 'account/register', values).pipe(\n      map((user: any) => { // IUser\n        if (user) {\n          localStorage.setItem('token', user.token);\n          this.currentUserSource.next(user);\n        }\n      })\n    )\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    this.currentUserSource.next(null!);\n    this.router.navigateByUrl('/');\n  }\n\n  checkEmailExists(email: string) {\n    return this.http.get(this.baseUrl + 'account/emailexists?email=' + email);\n  }\n\n  getUserAddress() {\n    return this.http.get<IAddress>(this.baseUrl + 'account/address');\n  }\n\n  updateUserAddress(address: IAddress) {\n    return this.http.put<IAddress>(this.baseUrl + 'account/address', address);\n  }\n}\n","import { v4 as uuidv4 } from 'uuid';\n\nexport interface IBasket {\n  id: string;\n  items: IBasketItem[];\n  clientSecret?: string;\n  paymentIntentId?: string;\n  deliveryMethodId?: number;\n  shippingPrice?: number;\n}\n\nexport interface IBasketItem {\n  id: number;\n  productName: string;\n  price: number;\n  quantity: number;\n  pictureUrl: string;\n  brand: string;\n  type: string;\n}\n\nexport class Basket implements IBasket {\n  id = uuidv4();\n  items: IBasketItem[] = [];\n}\n\nexport interface IBasketTotals {\n  shipping: number;\n  subtotal: number;\n  total: number;\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { Basket, IBasket, IBasketItem, IBasketTotals } from '../shared/models/basket';\nimport { IDeliveryMethod } from '../shared/models/deliveryMethod';\nimport { IProduct } from '../shared/models/product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BasketService {\n  baseUrl = environment.apiUrl;\n  private basketSource = new BehaviorSubject<IBasket>(null!);\n  basket$ = this.basketSource.asObservable();// subscripe using the async pipe in order to get\n  // the value of whatever the basket values are\n  private basketTotalSource = new BehaviorSubject<IBasketTotals>(null!);\n  basketTotal$ = this.basketTotalSource.asObservable();\n  shipping = 0;\n\n  constructor(private http: HttpClient) { }\n\n  createPaymentIntent() {\n    return this.http.post(this.baseUrl + 'payments/' + this.getCurrentBasketValue().id, {})\n      .pipe(\n        map((basket: any) => { // sooooolve these new changes to ts // IBasket\n          this.basketSource.next(basket);\n          console.log(this.getCurrentBasketValue());\n        })\n      )\n  }\n\n  setShippingPrice(deliveryMethod: IDeliveryMethod) {\n    this.shipping = deliveryMethod.price;\n    const basket = this.getCurrentBasketValue();\n    basket.deliveryMethodId = deliveryMethod.id;\n    basket.shippingPrice = deliveryMethod.price;\n    this.calculateTotals();\n    this.setBasket(basket);\n  }\n\n  getBasket(id: string) {//  here u can create a config file and set these URLs\n    return this.http.get(this.baseUrl + 'basket?id=' + id)\n      .pipe(// so we make use of our rxjs operators\n        map((basket: any) => { // solve this => basket: IBasket erro(object, void)\n          this.basketSource.next(basket);// in order to set the basket value\n          // console.log(this.getCurrentBasketValue());\n          this.shipping = basket.shippingPrice;\n          this.calculateTotals();\n        })\n      )\n  }\n\n  setBasket(basket: IBasket) { // response: IBasket\n    return this.http.post(this.baseUrl + 'basket', basket).subscribe((response: any) => {\n      this.basketSource.next(response);// dis gonna update our behavior subject with the new value\n      this.calculateTotals();\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  getCurrentBasketValue() {\n    return this.basketSource.value;\n  }\n\n  addItemToBasket(item: IProduct, quantity = 1) {\n    const itemToAdd: IBasketItem = this.mapProductItemToBasketItem(item, quantity);\n    const basket = this.getCurrentBasketValue() ?? this.createBasket();\n    basket.items = this.addOrUpdateItem(basket.items, itemToAdd, quantity);\n    console.info(basket);\n    this.setBasket(basket);\n  }\n\n  incrementItemQuantity(item: IBasketItem) {\n    const basket = this.getCurrentBasketValue();\n    const foundItemIndex = basket.items.findIndex(x => x.id === item.id);\n    basket.items[foundItemIndex].quantity++;\n    this.setBasket(basket);\n  }\n\n  decrementItemQuantity(item: IBasketItem) {\n    const basket = this.getCurrentBasketValue();\n    const foundItemIndex = basket.items.findIndex(x => x.id === item.id);\n    if (basket.items[foundItemIndex].quantity > 1) {\n      basket.items[foundItemIndex].quantity--;\n      this.setBasket(basket);\n    } else {\n      this.removeItemFromBasket(item);\n    }\n  }\n\n  removeItemFromBasket(item: IBasketItem) {\n    const basket = this.getCurrentBasketValue();\n    if (basket.items.some(x => x.id === item.id)) {\n      basket.items = basket.items.filter(i => i.id !== item.id);\n      if (basket.items.length > 0) {\n        this.setBasket(basket);\n      } else {\n        this.deleteBasket(basket);\n      }\n    }\n  }\n\n  deleteLocalBasket(id: string) {\n    this.basketSource.next(null!);\n    this.basketTotalSource.next(null!);\n    localStorage.removeItem('basket_id');\n  }\n\n  deleteBasket(basket: IBasket) {\n    return this.http.delete(this.baseUrl + 'basket?id=' + basket.id).subscribe({\n      next: (n) => {\n        this.basketSource.next(null!);\n        this.basketTotalSource.next(null!);\n        localStorage.removeItem('basket_id');\n      },\n      error: (e) => console.error(e),\n      complete: () => console.info('copmlete')\n    });\n  }\n\n  private calculateTotals() {\n    const basket = this.getCurrentBasketValue();\n    const shipping = this.shipping;\n    const subtotal = basket.items.reduce((a, b) => (b.price * b.quantity) + a, 0);\n    const total = subtotal + shipping;\n    this.basketTotalSource.next({ shipping, total, subtotal });\n  }\n\n\n  private addOrUpdateItem(items: IBasketItem[], itemToAdd: IBasketItem, quantity: number): IBasketItem[] {\n    const index = items.findIndex(i => i.id === itemToAdd.id);\n    if (index === -1) {\n      itemToAdd.quantity = quantity;\n      items.push(itemToAdd);\n    } else {\n      items[index].quantity += quantity;\n    }\n    return items;\n  }\n\n  private createBasket(): IBasket {\n    const basket = new Basket();\n    localStorage.setItem('basket_id', basket.id);\n    return basket;\n  }\n\n  private mapProductItemToBasketItem(item: IProduct, quantity: number): IBasketItem {\n    return {\n      id: item.id,\n      productName: item.name,\n      price: item.price,\n      pictureUrl: item.pictureUrl,\n      quantity,\n      brand: item.productBrand,\n      type: item.productType\n    }\n  }\n}\n","import { NgbCarousel, NgbCarouselModule, NgbDropdown, NgbDropdownModule, NgbModule, NgbPagination, NgbPaginationModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PagingHeaderComponent } from './components/paging-header/paging-header.component';\nimport { PagerComponent } from './components/pager/pager.component';\nimport { OrderTotalsComponent } from './components/order-totals/order-totals.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TextInputComponent } from './components/text-input/text-input.component';\nimport { StepperComponent } from './components/stepper/stepper.component';\nimport { BasketSummaryComponent } from './components/basket-summary/basket-summary.component';\nimport { RouterModule } from '@angular/router';\nimport { CdkStepperModule } from '@angular/cdk/stepper';\n\n@NgModule({\n  declarations: [PagingHeaderComponent, PagerComponent, OrderTotalsComponent, TextInputComponent, StepperComponent, BasketSummaryComponent],\n  imports: [\n    CommonModule,\n    NgbPaginationModule,\n    NgbCarouselModule,\n    NgbDropdownModule,\n    ReactiveFormsModule,\n    FormsModule,\n    CdkStepperModule,\n    RouterModule\n  ],\n  exports: [ // so it's available for use when we import our shared module into any module\n    NgbModule,\n    PagingHeaderComponent,\n    PagerComponent,\n    OrderTotalsComponent,\n    ReactiveFormsModule,\n    FormsModule,\n    NgbPaginationModule,\n    NgbCarouselModule,\n    NgbDropdownModule,\n    TextInputComponent,\n    CdkStepperModule,\n    StepperComponent,\n    BasketSummaryComponent\n  ]\n})\nexport class SharedModule { }\n","export const environment = {\n  apiUrl: 'api/',\n  production: true\n};\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AccountService } from 'src/app/account/account.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private accountService: AccountService, private router: Router) { }\n\n  canActivate(// we don't need to subscribe to currentUser$ 'cause the router gonna subscribe for\n    route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n    return this.accountService.currentUser$.pipe(\n      map(auth => {// us and also gonna unsubscribe\n        if (auth)\n          return true;\n        this.router.navigate(['account/login'], { queryParams: { returnUrl: state.url } })\n        return false;\n      })\n    )\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container mt-5\">\n    <h1>Not found</h1>\n</div>\n","<div class=\"container mt-5\">\n    <h4>Internal server error - refreshing the page will make the exception disapper</h4>\n    <ng-container *ngIf=\"error\">\n        <h5 class=\"text-danger\">Error: {{error.message}}</h5>\n        <p class=\"font-weight-bold\">Note: if you are seeing this then Angular is probably not responsible</p>\n        <p>What to do next?</p>\n        <ol>\n            <li>Open chrome dev tools</li>\n            <li>Inspect the network tab</li>\n            <li>Check the failing request</li>\n            <li>Examine this request URL - make sure this is correct</li>\n            <li>Reproduce the error in postman - if we get the same response in postman, then the issue is NOT with\n                angular</li>\n        </ol>\n        <p>Following is the stack trace - this is where your investigation should start!</p>\n        <code class=\"mt-5\" style=\"background-color: whitesmoke;\">{{error.details}}</code>\n    </ng-container>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-server-error',\n  templateUrl: './server-error.component.html',\n  styleUrls: ['./server-error.component.scss']\n})\nexport class ServerErrorComponent implements OnInit {\n  error: any;\n\n  constructor(private router: Router) {\n    const navigation = this.router.getCurrentNavigation();//we have to do it here else undefined\n    this.error = navigation?.extras?.state?.['error'];\n  }\n\n  ngOnInit(): void {\n  }\n}\n","<div class=\"container mt-5\">\n  <button (click)=\"get500Error()\" class=\"btn btn-outline-primary me-3\">Test 500 error</button>\n  <button (click)=\"get404Error()\" class=\"btn btn-outline-primary me-3\">Test 404 error</button>\n  <button (click)=\"get400Error()\" class=\"btn btn-outline-primary me-3\">Test 400 error</button>\n  <button (click)=\"get400ValidationError()\" class=\"btn btn-outline-primary me-3\">Test 400 validation error</button>\n  <div class=\"row mt-5\" *ngIf=\"validationErrors\">\n    <ul class=\"text-danger\">\n      <li *ngFor=\"let error of validationErrors\">{{error}}</li>\n    </ul>\n  </div>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-test-error',\n  templateUrl: './test-error.component.html',\n  styleUrls: ['./test-error.component.scss']\n})\nexport class TestErrorComponent implements OnInit {\n  baseUrl = environment.apiUrl;\n  validationErrors: any;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n  }\n\n  get404Error() {\n    this.http.get(this.baseUrl + 'products/42').subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  get500Error() {\n    this.http.get(this.baseUrl + 'buggy/servererror').subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  get400Error() {\n    this.http.get(this.baseUrl + 'buggy/badrequest').subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  get400ValidationError() {\n    this.http.get(this.baseUrl + 'products/fortytwo').subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n      this.validationErrors = error.errors;\n    })\n  }\n\n}\n","<ngb-carousel #carousel [interval]=\"2000\" [pauseOnHover]=\"pauseOnHover\" [pauseOnFocus]=\"pauseOnFocus\"\n  (slide)=\"onSlide($event)\" style=\"margin-top: 75px\">\n  <ng-template ngbSlide>\n    <div class=\"picsum-img-wrapper\">\n      <img src=\"assets/images/hero1.jpg\" alt=\"first slide\" style=\"display: block; width: 100%;\">\n    </div>\n  </ng-template>\n  <ng-template ngbSlide>\n    <div class=\"picsum-img-wrapper\">\n      <img src=\"assets/images/hero2.jpg\" alt=\"second slide\" style=\"display: block; width: 100%;\">\n    </div>\n  </ng-template>\n  <ng-template ngbSlide>\n    <div class=\"picsum-img-wrapper\">\n      <img src=\"assets/images/hero3.jpg\" alt=\"third slide\" style=\"display: block; width: 100%;\">\n    </div>\n  </ng-template>\n</ngb-carousel>\n<section class=\"featured\">\n  <div class=\"d-flex justify-content-center pt-4\">\n    <h1>Welcome to the shop!</h1>\n  </div>\n</section>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './core/guards/auth.guard';\nimport { NotFoundComponent } from './core/not-found/not-found.component';\nimport { ServerErrorComponent } from './core/server-error/server-error.component';\nimport { TestErrorComponent } from './core/test-error/test-error.component';\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent, data: { breadcrumb: 'Home' } },\n  { path: 'test-error', component: TestErrorComponent, data: { breadcrumb: 'Test Errors' } },\n  { path: 'server-error', component: ServerErrorComponent, data: { breadcrumb: 'Server Error' } },\n  { path: 'not-found', component: NotFoundComponent, data: { breadcrumb: 'Not found' } },\n  {\n    path: 'shop', loadChildren: () => import('./shop/shop.module').then(mod => mod.ShopModule),\n    data: { breadcrumb: 'Shop' }\n  },\n  {\n    path: 'basket', loadChildren: () => import('./basket/basket.module').then(mod => mod.BasketModule),\n    data: { breadcrumb: 'Basket' }\n  },\n  {\n    path: 'checkout',\n    canActivate: [AuthGuard],\n    loadChildren: () => import('./checkout/checkout.module').then(mod => mod.CheckoutModule),\n    data: { breadcrumb: 'Checkout' }\n  },\n  {\n    path: 'orders',\n    canActivate: [AuthGuard],\n    loadChildren: () => import('./orders/orders.module').then(mod => mod.OrdersModule),\n    data: { breadcrumb: 'Orders' }\n  },\n  {\n    path: 'account', loadChildren: () => import('./account/account.module').then(mod => mod.AccountModule),\n    data: { breadcrumb: { skip: true } }\n  },\n  { path: '**', redirectTo: 'not-found', pathMatch: 'full' }\n];\n\n@NgModule({// we already know that when we add forRoot its gonna be added\n  //to the root module which is app module and there where our routes\n  //are contained\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgbCarousel, NgbSlideEvent, NgbSlideEventSource } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  // TODO: u can dynamically define array of pics here\n  paused = false;\n  unpauseOnArrow = false;\n  pauseOnIndicator = false;\n  pauseOnHover = true;\n  pauseOnFocus = true;\n\n  @ViewChild('carousel', { static: true }) carousel: NgbCarousel;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  togglePaused() {\n    if (this.paused) {\n      this.carousel.cycle();\n    } else {\n      this.carousel.pause();\n    }\n    this.paused = !this.paused;\n  }\n\n  onSlide(slideEvent: NgbSlideEvent) {\n    if (\n      this.unpauseOnArrow &&\n      slideEvent.paused &&\n      (slideEvent.source === NgbSlideEventSource.ARROW_LEFT || slideEvent.source === NgbSlideEventSource.ARROW_RIGHT)\n    ) {\n      this.togglePaused();\n    }\n    if (this.pauseOnIndicator && !slideEvent.paused && slideEvent.source === NgbSlideEventSource.INDICATOR) {\n      this.togglePaused();\n    }\n  }\n}\n","<div class=\"container py-3\">\n  <div class=\"d-flex flex-column flex-md-row align-items-center justify-content-between p-3 mb-3 px-md-4 border-bottom\n    bg-white border-bottom shadow-sm fixed-top\">\n\n    <img src=\"/assets/images/logo.png\" class=\"logo\" alt=\"logo\" [routerLink]=\"['/']\">\n\n    <nav class=\"d-inline-flex mt-2 mt-md-0 ms-md-auto text-dark\" style=\"font-size: larger;\">\n      <a class=\"me-3 py-2 text-decoration-none\" [routerLink]=\"['/']\" routerLinkActive=\"active\"\n        [routerLinkActiveOptions]=\"{exact: true}\">Home</a>\n      <a class=\"me-3 py-2 text-decoration-none\" routerLink=\"/shop\" routerLinkActive=\"active\">Shop</a>\n      <a class=\"me-3 py-2 text-decoration-none\" routerLink=\"/test-error\" routerLinkActive=\"active\">Errors</a>\n    </nav>\n    <!-- <a class=\"me-3 py-2 text-dark text-decoration-none\" href=\"#\">Pricing</a> -->\n    <div class=\"d-flex align-items-center\">\n      <a href=\"\" class=\"position-relative\" routerLink=\"/basket\">\n        <i class=\"fa fa-shopping-cart fa-2x me-4 text-dark\"></i>\n        <div *ngIf=\"(basket$ | async) as basket\" class=\"cart-no\">{{basket.items.length}}</div>\n      </a>\n      <ng-container *ngIf=\"(currentUser$ | async) === null\">\n        <a routerLink=\"/account/login\" class=\"btn btn-outline-secondary me-2\">Login</a>\n        <a routerLink=\"/account/register\" class=\"btn btn-outline-secondary me-3\">Sign up</a>\n      </ng-container>\n      <ng-container *ngIf=\"(currentUser$ | async) as user\">\n        <div class=\"btn-group ml-3 me-5\" ngbDropdown>\n          <a class=\"dropdown-toggle\" ngbDropdownToggle role=\"button\" id=\"dropdownMenuLink\" style=\"cursor: pointer;\">\n\n            <strong>Welcome {{(currentUser$ | async).displayName}}</strong>\n          </a>\n          <ul class=\"dropdown-menu\" ngbDropdownMenu aria-labelledby=\"navbarDropdown3\" style=\"cursor:pointer\">\n            <li><a ngbDropdownItem (click)=\"$event.preventDefault()\" routerLink=\"/basket\"\n                class=\"dropdown-item d-flex align-items-center py-2\">\n                <i class=\"fa fa-shopping-cart me-2\"></i> View Basket\n              </a>\n            </li>\n            <li>\n              <a ngbDropdownItem (click)=\"$event.preventDefault()\" routerLink=\"/orders\"\n                class=\"dropdown-item d-flex align-items-center py-2\">\n                <i class=\"fa fa-history me-2\"></i> View Orders\n              </a>\n            </li>\n            <li>\n              <hr class=\"dropdown-divider\">\n            </li>\n            <li>\n              <a ngbDropdownItem (click)=\"$event.preventDefault()\" (click)=\"logout()\"\n                class=\"dropdown-item d-flex align-items-center py-2\">\n                <i class=\"fa fa-sign-out me-2\"></i> Logout\n              </a>\n            </li>\n          </ul>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AccountService } from 'src/app/account/account.service';\nimport { BasketService } from 'src/app/basket/basket.service';\nimport { IBasket } from 'src/app/shared/models/basket';\nimport { IUser } from 'src/app/shared/models/user';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.scss']\n})\nexport class NavBarComponent implements OnInit {\n  basket$: Observable<IBasket>;\n  currentUser$: Observable<IUser>;\n  collapsed = true;\n\n  constructor(private basketService: BasketService, private accountService: AccountService) { }\n\n  ngOnInit(): void {\n    this.basket$ = this.basketService.basket$;\n    this.currentUser$ = this.accountService.currentUser$;\n  }\n\n  logout() {\n    this.accountService.logout();\n  }\n\n}\n","<ng-container *ngIf=\"(breadcrumb$ | async) as breadcrumbs\">\n  <section *ngIf=\"breadcrumbs.length > 0 && breadcrumbs[breadcrumbs.length-1].label !== 'Home'\"\n    style=\"margin-top: 75px; background-color: #f5f5f5;\">\n    <div class=\"container\">\n      <div class=\"row d-flex align-items-center\">\n        <div class=\"col-9\">\n          <h3>{{breadcrumbs.length > 0 && breadcrumbs[breadcrumbs.length-1].label | titlecase}}</h3>\n        </div>\n        <div class=\"col-3\">\n          <xng-breadcrumb></xng-breadcrumb>\n        </div>\n      </div>\n    </div>\n  </section>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BreadcrumbService } from 'xng-breadcrumb';\n\n@Component({\n  selector: 'app-section-header',\n  templateUrl: './section-header.component.html',\n  styleUrls: ['./section-header.component.scss']\n})\nexport class SectionHeaderComponent implements OnInit {\n  breadcrumb$: Observable<any[]>;\n\n  constructor(private bcService: BreadcrumbService) { }\n\n  ngOnInit(): void {\n    this.breadcrumb$ = this.bcService.breadcrumbs$;\n  }\n\n}","import { Component, OnInit } from \"@angular/core\";\nimport { AccountService } from \"./account/account.service\";\nimport { BasketService } from \"./basket/basket.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'ecommerce-skinet';\n\n  constructor(private basketService: BasketService, private accountService: AccountService) {\n  }\n\n  ngOnInit(): void {\n    this.loadBasket();\n    this.loadCurrentUser();\n  }\n\n  loadCurrentUser() {\n    const token = localStorage.getItem('token');\n    this.accountService.loadCurrentUser(token).subscribe({\n      next: (v) => console.log('loaded user'),\n      error: (e) => console.error(e),\n      complete: () => console.info('complete')\n    })\n  }\n\n  loadBasket() {\n    const basketId = localStorage.getItem('basket_id');\n    if (basketId) {\n      this.basketService.getBasket(basketId).subscribe({\n        next: (v) => console.log('initialised basket'),\n        error: (e) => console.error(e),\n        complete: () => console.info('complete')\n      })\n    }\n  }\n}\n","<ngx-spinner type=\"ball-scale-multiple\">\n  <h4>loading...</h4>\n</ngx-spinner>\n<app-nav-bar></app-nav-bar>\n<app-section-header></app-section-header>\n<div>\n  <!-- <h1>Welcome to {{ title }}</h1> -->\n  <!-- <app-shop></app-shop> -->\n  <!-- replace our component with the activated route component so as soon as we browse\n        to a page then our routes gonna load out that comp and replace this with the component\n        we are loading\n  -->\n  <router-outlet></router-outlet>\n</div>\n","import { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\nimport { BreadcrumbModule } from 'xng-breadcrumb';\nimport { TestErrorComponent } from './test-error/test-error.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { ServerErrorComponent } from './server-error/server-error.component';\nimport { SectionHeaderComponent } from './section-header/section-header.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { ToastrModule } from 'ngx-toastr';\n\n@NgModule({\n  declarations: [NavBarComponent, TestErrorComponent, NotFoundComponent, ServerErrorComponent, SectionHeaderComponent],// for lazy loading and we gonna export it to use in another comp\n  imports: [\n    CommonModule,\n    BreadcrumbModule,\n    SharedModule,\n    ToastrModule.forRoot({\n      positionClass: 'toast-bottom-right',\n      preventDuplicates: true\n    }),\n    RouterModule\n  ],\n  exports: [NavBarComponent, SectionHeaderComponent]// so u can use inside app.module\n})\nexport class CoreModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './home.component';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [HomeComponent],\n  imports: [\n    CommonModule,\n    SharedModule\n  ],\n  exports: [HomeComponent]\n})\nexport class HomeModule { }\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { catchError, delay } from 'rxjs/operators';\nimport { ToastrService } from 'ngx-toastr';\n// dependency injection for needed services\n@Injectable()// if not Injectable then it's never able to be utilized and will never handle our errors\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor(private router: Router, private toastr: ToastrService) { }\n  // HttpHandler is our response back\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(req).pipe(// pipe allow us to chain our rxjs operators\n      catchError(error => {// catch error 'cause our http response are coming back as observable\n        if (error) {\n          if (error.status === 400) {\n            if (error.error.errors) {\n              throw error.error;\n            } else {\n              this.toastr.error(error.error.message, error.error.statusCode);\n            }\n          }\n          if (error.status === 401) {\n            this.toastr.error(error.error.message, error.error.statusCode);\n          }\n          if (error.status === 404 || error.ok == false) {\n            this.router.navigateByUrl('/not-found');\n          }\n          if (error.status === 500) {//state: is the name of object we using to store the exception\n            // we gonna pass in. haha do u like the name error: error.error!? :)\n            const navigationExtras: NavigationExtras = { state: { error: error.error } }\n            this.router.navigateByUrl('/server-error', navigationExtras);\n          }\n        }\n\n        return throwError(error);\n      })\n    )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BusyService {\n  busyRequestCount = 0;\n\n  constructor(private spinnerService: NgxSpinnerService) { }\n\n  busy() {\n    this.busyRequestCount++;\n    this.spinnerService.show(undefined, {\n      type: 'ball-atom',\n      bdColor: 'rgba(255,255,255,0.7)',\n      color: '#333333'\n    });\n  }\n\n  idle() {\n    this.busyRequestCount--;\n    if (this.busyRequestCount <= 0) {\n      this.busyRequestCount = 0;\n      this.spinnerService.hide();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { BusyService } from '../services/busy.service';\nimport { delay, finalize } from 'rxjs/operators';\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n\n  constructor(private busyService: BusyService) { }\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    if (request.method === 'POST' && request.url.includes('orders')) {\n      return next.handle(request);// this gonna move on to the next step and exit current\n    }\n    if (request.method === 'DELETE') {\n      return next.handle(request);\n    }\n    if (request.url.includes('emailexists')) {\n      return next.handle(request);\n    }\n    this.busyService.busy();\n    return next.handle(request).pipe(\n      // delay(1000), // for test\n      finalize(() => {\n        this.busyService.idle();\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n\n  constructor() { }\n  // there are more logic can be done here!\n  intercept(req: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      req = req.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`\n        }\n      })\n    }\n\n    return next.handle(req);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CoreModule } from './core/core.module';\nimport { ShopModule } from './shop/shop.module';\nimport { HomeModule } from './home/home.module';\nimport { ErrorInterceptor } from './core/interceptors/error.interceptor';\nimport { LoadingInterceptor } from './core/interceptors/loading.interceptor';\nimport { JwtInterceptor } from './core/interceptors/jwt.interceptor';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    CoreModule,\n    // ShopModule,//'cause u did lazy loading u no longer need to import it here\n    HomeModule,\n    NgxSpinnerModule.forRoot({ type: 'ball-scale-multiple' })\n  ],\n  providers: [//\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"x_google_ignoreList":[]}