{"version":3,"file":"src_app_shop_shop_module_ts.db8c67510d9f4fa2.js","mappings":"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","names":["ShopParams","constructor","this","Pagination","ShopService","http","environment","Map","getProducts","useCache","productCache","size","has","Object","values","shopParams","join","pagination","data","get","of","params","HttpParams","brandId","append","toString","typeId","search","sort","pageNumber","pageSize","baseUrl","observe","pipe","map","response","set","body","setShopParams","getShopParams","getProduct","id","product","forEach","products","find","p","console","log","getBrands","brands","length","getTypes","types","i0","factory","PagingHeaderComponent","ngOnInit","selectors","ProductItemComponent","basketService","addItemToBasket","ctx","ShopComponent","shopService","name","value","subscribe","next","totalCount","count","error","complete","info","onBrandSelected","onTypeSelected","onSortSelected","onPageChanged","event","onSearch","searchTerm","nativeElement","onReset","routes","path","component","ProductDetailsComponent","activatedRoute","bcService","loadProduct","snapshot","paramMap","quantity","incrementQuantity","decrementQuantity","breadcrumb","alias","ShopRoutingModule","RouterModule","ShopModule","CommonModule","SharedModule"],"sourceRoot":"webpack:///","sources":["./src/app/shared/models/shopParams.ts","./src/app/shared/models/pagination.ts","./src/app/shop/shop.service.ts","./src/app/shared/components/paging-header/paging-header.component.html","./src/app/shared/components/paging-header/paging-header.component.ts","./src/app/shop/product-item/product-item.component.ts","./src/app/shop/product-item/product-item.component.html","./src/app/shop/shop.component.html","./src/app/shop/shop.component.ts","./src/app/shop/product-details/product-details.component.html","./src/app/shop/shop-routing.module.ts","./src/app/shop/product-details/product-details.component.ts","./src/app/shop/shop.module.ts"],"sourcesContent":["export class ShopParams {\n  brandId = 0;\n  typeId = 0;\n  sort = 'name';\n  pageNumber = 1;\n  pageSize = 6;\n  search = '';\n}\n","import { IProduct } from \"./product\";\n\nexport interface IPagination {\n  pageIndex: number;\n  pageSize: number;\n  count: number;\n  data: IProduct[];\n}\n\nexport class Pagination implements IPagination {\n  pageIndex = 0;\n  pageSize = 0;\n  count = 0;\n  data = [];\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { IBrand } from '../shared/models/brand';\r\nimport { IPagination, Pagination } from '../shared/models/pagination';\r\nimport { IType } from '../shared/models/productType';\r\nimport { map } from 'rxjs/operators';\r\nimport { ShopParams } from '../shared/models/shopParams';\r\nimport { IProduct } from '../shared/models/product';\r\nimport { of } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ShopService {\r\n  baseUrl = environment.apiUrl;\r\n  products: IProduct[] = [];\r\n  brands: IBrand[] = [];\r\n  types: IType[] = [];\r\n  pagination = new Pagination() as any; // ! or as any to solve type null isn't assignable to ..\r\n  shopParams = new ShopParams();\r\n  productCache = new Map();// map => to store our data in a key: value pair\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getProducts(useCache: boolean) {\r\n    if (useCache === false)\r\n      this.productCache = new Map();\r\n\r\n    if (this.productCache.size > 0 && useCache === true) {\r\n      if (this.productCache.has(Object.values(this.shopParams).join('-'))) {\r\n        this.pagination.data = this.productCache.get(Object.values(this.shopParams).join('-'));\r\n        return of(this.pagination);\r\n      }\r\n    }\r\n\r\n    let params = new HttpParams();\r\n\r\n    if (this.shopParams.brandId !== 0)\r\n      params = params.append('brandId', this.shopParams.brandId.toString())\r\n\r\n    if (this.shopParams.typeId !== 0)\r\n      params = params.append('typeId', this.shopParams.typeId.toString())\r\n\r\n    if (this.shopParams.search)\r\n      params = params.append('search', this.shopParams.search)\r\n\r\n    params = params.append('sort', this.shopParams.sort);\r\n    params = params.append('pageIndex', this.shopParams.pageNumber.toString());\r\n    params = params.append('pageSize', this.shopParams.pageSize.toString());\r\n    // we observing a response and dis gonna give us the http response instead of\r\n    // the body of the resp which is getting done automatically if we use this.http.get<>();\r\n    // 'cause observe this response we need to project our data into actual response\r\n    // we need to extract the body out of this\r\n    return this.http.get<IPagination>(this.baseUrl + 'products/getproducts', { observe: 'response', params })\r\n      .pipe(// this pipe is a wrapper around any rxjs operator that we want to use\r\n        // allow us to chain multiple rxjs operators together to manipulate or do\r\n        // something with the observable as it comes back in\r\n        map(response => {\r\n          this.productCache.set(Object.values(this.shopParams).join('-'), response.body!.data);\r\n          this.pagination = response.body;\r\n          return this.pagination;\r\n        })\r\n      )\r\n  }\r\n\r\n  setShopParams(params: ShopParams) {\r\n    this.shopParams = params;\r\n  }\r\n\r\n  getShopParams() {\r\n    return this.shopParams;\r\n  }\r\n\r\n  getProduct(id: number | null) {\r\n    let product: IProduct | undefined;\r\n\r\n    this.productCache.forEach((products: IProduct[]) => {\r\n      product = products.find(p => p.id === id);\r\n      console.log(product);// TODO: check here 'cause its undefined\r\n    })\r\n\r\n    if (product) return of(product);// of => 'cause our product returns an observable\r\n\r\n    return this.http.get<IProduct>(this.baseUrl + 'products/getproduct?id=' + id);\r\n  }\r\n\r\n  getBrands() {\r\n    if (this.brands.length > 0) {\r\n      return of(this.brands);\r\n    }\r\n    return this.http.get<IBrand[]>(this.baseUrl + 'products/brands').pipe(//rxjs operators\r\n      map(response => {\r\n        this.brands = response;\r\n        return response;\r\n      })\r\n    )\r\n  }\r\n\r\n  getTypes() {\r\n    if (this.types.length > 0) {\r\n      return of(this.types);\r\n    }\r\n    return this.http.get<IType[]>(this.baseUrl + 'products/types').pipe(\r\n      map(response => {\r\n        this.types = response;\r\n        return response;\r\n      })\r\n    )\r\n  }\r\n}\r\n","<header>\r\n    <span *ngIf=\"totalCount && totalCount > 0\" >Showing\r\n        <strong>\r\n            {{(pageNumber-1)*pageSize + 1}} -\r\n            {{pageNumber*pageSize\r\n                > totalCount\r\n                ? totalCount : pageNumber*pageSize\r\n            }}\r\n        </strong> of <strong>{{totalCount}}</strong> results </span>\r\n        <span *ngIf=\"totalCount === 0\">There are <strong>0</strong> results for this filter</span>\r\n</header>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-paging-header',\r\n  templateUrl: './paging-header.component.html',\r\n  styleUrls: ['./paging-header.component.scss']\r\n})\r\nexport class PagingHeaderComponent implements OnInit {\r\n  @Input() pageNumber: number = 0;\r\n  @Input() pageSize: number = 0;\r\n  @Input() totalCount: number = 0;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { BasketService } from 'src/app/basket/basket.service';\nimport { IProduct } from 'src/app/shared/models/product';\n\n@Component({\n  selector: 'app-product-item',\n  templateUrl: './product-item.component.html',\n  styleUrls: ['./product-item.component.scss']\n})\nexport class ProductItemComponent implements OnInit {\n  @Input() product!: IProduct;\n\n  constructor(private basketService: BasketService) { }\n\n  ngOnInit(): void {\n  }\n\n  addItemToBasket() {\n    this.basketService.addItemToBasket(this.product);\n  }\n\n}\n","<div class=\"col h-100\">\n  <div class=\"card h-100 shadow-sm\">\n    <div class=\"image position-relative\" style=\"cursor: pointer;\">\n      <img src=\"{{product.pictureUrl}}\" alt=\"{{product.name}}\" class=\"img-fluid bg-info\">\n      <div class=\"card-body d-flex flex-column mb-2\">\n        <a routerLink=\"/shop/{{product.id}}\">\n          <h6 class=\"text-uppercase crop\">{{product.name}}</h6>\n        </a>\n        <span>{{product.price | currency}}</span>\n      </div>\n      <div class=\"d-flex align-items-center justify-content-center my-2\">\n        <!-- <div class=\"btn-group mt-auto\"> -->\n        <button (click)=\"addItemToBasket()\" type=\"button\" class=\"btn btn-primary bi bi-cart-dash-fill me-2\"></button>\n        <button routerLink=\"/shop/{{product.id}}\" type=\"button\" class=\"btn btn-primary\">View</button>\n      </div>\n    </div>\n  </div>\n</div>\n","<div class=\"container mt-3\">\r\n  <div class=\"row\">\r\n    <section class=\"col-3\">\r\n      <ng-container *ngIf=\"types && brands\">\r\n        <h5 class=\"text-warning ms-3 mt-1 mb-3\">Sort</h5>\r\n        <select\r\n          class=\"form-select mb-3\"\r\n          (change)=\"onSortSelected($any($event.target).value)\"\r\n        >\r\n          <option\r\n            *ngFor=\"let sort of sortOptions\"\r\n            [selected]=\"shopParams.sort === sort.value\"\r\n            [value]=\"sort.value\"\r\n          >\r\n            {{ sort.name }}\r\n          </option>\r\n        </select>\r\n\r\n        <h5 class=\"text-warning ms-3\">Brands</h5>\r\n        <ul class=\"list-group mb-3\">\r\n          <li\r\n            class=\"list-group-item\"\r\n            *ngFor=\"let brand of brands\"\r\n            [class.active]=\"brand.id === shopParams.brandId\"\r\n            [value]=\"brand.id\"\r\n            (click)=\"onBrandSelected(brand.id)\"\r\n          >\r\n            {{ brand.name }}\r\n          </li>\r\n        </ul>\r\n        <h5 class=\"text-warning ms-3\">Types</h5>\r\n        <ul class=\"list-group my-3\">\r\n          <li\r\n            class=\"list-group-item\"\r\n            *ngFor=\"let type of types\"\r\n            [class.active]=\"type.id === shopParams.typeId\"\r\n            [value]=\"type.id\"\r\n            (click)=\"onTypeSelected(type.id)\"\r\n          >\r\n            {{ type.name }}\r\n          </li>\r\n        </ul>\r\n      </ng-container>\r\n    </section>\r\n    <section class=\"col-9\">\r\n      <div class=\"d-flex row justify-content-between align-items-center pb-2\">\r\n        <div class=\"\" *ngIf=\"products\">\r\n          <input\r\n            (keyup.enter)=\"onSearch()\"\r\n            type=\"text\"\r\n            class=\"form-control me-2\"\r\n            #search\r\n            placeholder=\"Search\"\r\n          />\r\n          <button (click)=\"onSearch()\" class=\"btn btn-outline-primary my-2\">\r\n            Search\r\n          </button>\r\n          <button (click)=\"onReset()\" class=\"btn btn-outline-success ms-2 my-2\">\r\n            Reset\r\n          </button>\r\n        </div>\r\n        <app-paging-header\r\n          class=\"\"\r\n          [totalCount]=\"totalCount\"\r\n          [pageNumber]=\"shopParams.pageNumber\"\r\n          [pageSize]=\"shopParams.pageSize\"\r\n        >\r\n        </app-paging-header>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-4 mb-4\" *ngFor=\"let product of products\">\r\n          <app-product-item [product]=\"product\"></app-product-item>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"d-flex justify-content-center\" *ngIf=\"totalCount > 0\">\r\n        <ngb-pagination\r\n          [pageSize]=\"shopParams.pageSize\"\r\n          [collectionSize]=\"totalCount\"\r\n          (pageChange)=\"onPageChanged($event)\"\r\n          [(page)]=\"shopParams.pageNumber\"\r\n        >\r\n        </ngb-pagination>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</div>\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { IBrand } from '../shared/models/brand';\r\nimport { IProduct } from '../shared/models/product';\r\nimport { IType } from '../shared/models/productType';\r\nimport { ShopParams } from '../shared/models/shopParams';\r\nimport { ShopService } from './shop.service';\r\n\r\n@Component({\r\n  selector: 'app-shop',\r\n  templateUrl: './shop.component.html',\r\n  styleUrls: ['./shop.component.scss']\r\n})\r\n\r\nexport class ShopComponent implements OnInit {// to get the template variable of html\r\n  // false if our html input element is dependent on another elm or using directives\r\n  // false means this child gonna appear after we got our products available\r\n  @ViewChild('search', { static: false }) searchTerm!: ElementRef;\r\n  products: IProduct[] = [];\r\n  brands: IBrand[] = [];\r\n  types: IType[] = [];\r\n  shopParams: ShopParams;\r\n  totalCount: number = 0;\r\n  // elm = $event.target as HTMLElement;\r\n  sortOptions = [\r\n    { name: 'Alphabetical', value: 'name' },\r\n    { name: 'Price: Low to high', value: 'priceAsc' },\r\n    { name: 'Price: High to low', value: 'priceDesc' },\r\n  ]\r\n\r\n  constructor(private shopService: ShopService) {\r\n    this.shopParams = this.shopService.getShopParams();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getProducts(true);\r\n    this.getBrands();\r\n    this.getTypes();\r\n  }\r\n\r\n  getProducts(useCache = false) {\r\n    this.shopService.getProducts(useCache).subscribe({\r\n      next: (response) => {\r\n        this.products = response.data;\r\n        this.totalCount = response.count;\r\n      },\r\n      error: (error) => {\r\n        console.log(error);\r\n      },\r\n      complete: () => console.info('complete')\r\n    })\r\n  }\r\n\r\n  getBrands() {\r\n    this.shopService.getBrands().subscribe(response => {\r\n      // spread => res is an array of brand object and we creating another object so we use it to\r\n      //            spread all the objects from that array and simply adding on another object\r\n      this.brands = [{ id: 0, name: 'All' }, ...response];\r\n    }, error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  getTypes() {\r\n    this.shopService.getTypes().subscribe(response => {\r\n      this.types = [{ id: 0, name: 'All' }, ...response];\r\n    }, error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  onBrandSelected(brandId: number) {\r\n    const params = this.shopService.getShopParams();\r\n    params.brandId = brandId;\r\n    params.pageNumber = 1;\r\n    this.shopService.setShopParams(params);\r\n    this.getProducts();\r\n  }\r\n\r\n  onTypeSelected(typeId: number) {\r\n    const params = this.shopService.getShopParams();\r\n    params.typeId = typeId;\r\n    params.pageNumber = 1;\r\n    this.shopService.setShopParams(params);\r\n    this.getProducts();\r\n  }\r\n\r\n  onSortSelected(sort: string) {\r\n    const params = this.shopService.getShopParams();\r\n    params.sort = sort;\r\n    this.shopService.setShopParams(params);\r\n    this.getProducts();\r\n  }\r\n\r\n  onPageChanged(event: any) {\r\n    const params = this.shopService.getShopParams();\r\n    if (params.pageNumber !== event) { // solving the issue of multiple ideal requests in network\r\n      console.log(event);\r\n      params.pageNumber = event;\r\n      this.shopService.setShopParams(params);\r\n      this.getProducts(true);\r\n    }\r\n  }\r\n\r\n  onSearch() {\r\n    const params = this.shopService.getShopParams();\r\n    params.search = this.searchTerm.nativeElement.value;\r\n    params.pageNumber = 1; // error expression has changed after it was checked.\r\n    this.shopService.setShopParams(params);\r\n    this.getProducts();\r\n  }\r\n\r\n  onReset() {\r\n    this.searchTerm.nativeElement.value = '';\r\n    this.shopParams = new ShopParams();\r\n    this.shopService.setShopParams(this.shopParams);\r\n    this.getProducts();\r\n  }\r\n\r\n}\r\n","<div class=\"container mt-3\">\n  <div class=\"row\" *ngIf=\"product\">\n    <div class=\"col-6 mt-0\">\n      <img src=\"{{product.pictureUrl}}\" alt=\"{{product.name}}\" class=\"img-fluid w-100 mt-0\">\n    </div>\n    <div class=\"col-6 mt-3\">\n      <h3>{{product.name}}</h3>\n      <div class=\"mt-2\">\n        <h6>{{product.description}}</h6>\n      </div>\n      <p style=\"font-size: 2em;\">{{product.price | currency}}</p>\n      <div class=\"d-flex justify-content-start align-items-center\">\n        <i (click)=\"decrementQuantity()\" class=\"fa fa-minus-circle text-warning me-2\"\n          style=\"cursor: pointer; font-size: 2em;\"></i>\n        <span class=\"font-weight-bold\" style=\"font-size: 1.5em;\">{{quantity}}</span>\n        <i (click)=\"incrementQuantity()\" class=\"fa fa-plus-circle text-warning mx-2\"\n          style=\"cursor: pointer; font-size: 2em;\"></i>\n      </div>\n      <button (click)=\"addItemToBasket()\" class=\"btn btn-outline-primary btn-lg mt-3\">Add to Cart</button>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ShopComponent } from './shop.component';\nimport { ProductDetailsComponent } from './product-details/product-details.component';\n\nconst routes: Routes = [\n  { path: '', component: ShopComponent },\n  { path: ':id', component: ProductDetailsComponent, data: { breadcrumb: { alias: 'productDetails' } } },\n]\n\n@NgModule({\n  declarations: [],\n  imports: [// forChild => this means these routes are not available in app module but only shop\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]// we need this module inside our shop module\n})\nexport class ShopRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BasketService } from 'src/app/basket/basket.service';\nimport { IProduct } from 'src/app/shared/models/product';\nimport { BreadcrumbService } from 'xng-breadcrumb';\nimport { ShopService } from '../shop.service';\n\n@Component({\n  selector: 'app-product-details',\n  templateUrl: './product-details.component.html',\n  styleUrls: ['./product-details.component.scss']\n})\nexport class ProductDetailsComponent implements OnInit {\n  product!: IProduct;\n  quantity = 1;\n\n  constructor(private shopService: ShopService, private activatedRoute: ActivatedRoute,\n    private bcService: BreadcrumbService, private basketService: BasketService) {\n    this.bcService.set('@productDetails', ' ')//empty is better than nothing\n  }\n\n  ngOnInit(): void {\n    this.loadProduct();\n  }\n\n  loadProduct() {// here u can do the new implemn of subscribe\n    console.log(+this.activatedRoute.snapshot.paramMap.get('id'));\n    this.shopService.getProduct(+this.activatedRoute.snapshot.paramMap.get('id')).subscribe({\n      next: (product) => {\n        this.product = product;\n        this.bcService.set('@productDetails', product.name);\n      },\n      error: (error) => { console.log(error); },\n      complete: () => console.info('complete')\n    })\n  }\n\n  addItemToBasket() {\n    this.basketService.addItemToBasket(this.product, this.quantity);\n  }\n\n  incrementQuantity() {\n    this.quantity++;\n  }\n\n  decrementQuantity() {\n    if (this.quantity > 1) {\n      this.quantity--;\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ShopComponent } from './shop.component';\nimport { ProductItemComponent } from './product-item/product-item.component';\nimport { ProductDetailsComponent } from './product-details/product-details.component';\nimport { ShopRoutingModule } from './shop-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [ShopComponent, ProductItemComponent, ProductDetailsComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    ShopRoutingModule\n  ],\n  // exports: [ShopComponent]\n  // u no longer need to export it as app.module not responsible for loading this particula module\n  // our shop module is responsible for this and is already has it in our declarations\n})\nexport class ShopModule { }\n"],"x_google_ignoreList":[]}